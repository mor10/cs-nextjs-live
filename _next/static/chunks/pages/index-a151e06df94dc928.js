(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5557:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(9090)}])},9090:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return pages}});var r=n(5893),s=n(7294),o=n(2759),a=n.n(o);function Button(e){return(0,r.jsx)("button",{type:"button",className:a().btn,...e})}function ClickCount(){let[e,t]=(0,s.useState)(0),n=(0,s.useCallback)(()=>{t(e=>e+1)},[t]);return(0,r.jsxs)(Button,{onClick:n,children:["Clicks: ",e]})}var u=n(4876),i=n.n(u),pages=function(){let[e,t]=(0,s.useState)(0),n=(0,s.useCallback)(()=>{t(e=>e+1)},[t]);return(0,s.useEffect)(()=>{let e=setInterval(()=>{n()},1e3);return()=>{clearInterval(e)}},[n]),(0,r.jsxs)("main",{className:i().main,children:[(0,r.jsx)("h1",{children:"Fast Refresh Demo"}),(0,r.jsx)("p",{children:"Fast Refresh is a Next.js feature that gives you instantaneous feedback on edits made to your React components, without ever losing component state."}),(0,r.jsx)("hr",{className:i().hr}),(0,r.jsxs)("div",{children:[(0,r.jsx)("p",{children:"Auto incrementing value. The counter won't reset after edits or if there are errors."}),(0,r.jsxs)("p",{children:["Current value: ",e]})]}),(0,r.jsx)("hr",{className:i().hr}),(0,r.jsxs)("div",{children:[(0,r.jsx)("p",{children:"Component with state."}),(0,r.jsx)(ClickCount,{})]}),(0,r.jsx)("hr",{className:i().hr}),(0,r.jsxs)("div",{children:[(0,r.jsx)("p",{children:"The button below will throw 2 errors. You'll see the error overlay to let you know about the errors but it won't break the page or reset your state."}),(0,r.jsx)(Button,{onClick:e=>{setTimeout(()=>document.parentNode(),0),console.log(document.body())},children:"Throw an Error"})]}),(0,r.jsx)("hr",{className:i().hr})]})}},2759:function(e){e.exports={btn:"Button_btn__WOgGk"}},4876:function(e){e.exports={main:"home_main__gAgsa",hr:"home_hr__6Ge2D"}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=5557)}),_N_E=e.O()}]);